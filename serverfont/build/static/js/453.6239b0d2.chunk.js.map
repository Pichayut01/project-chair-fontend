{"version":3,"file":"static/js/453.6239b0d2.chunk.js","mappings":"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","sources":["component/Navbar.jsx","utils/cropImage.js","pages/AccountSetting.jsx"],"sourcesContent":["// src/component/Navbar.jsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../CSS/Navbar.css\";\r\nimport icon from \"../image/icon.ico\";\r\nimport userPlaceholderImage from \"../image/nulluser.png\";\r\nimport { FiPlus, FiLogOut, FiArrowLeft, FiShare2, FiEdit2, FiSave, FiX } from \"react-icons/fi\"; // ✨ เพิ่ม icon ใหม่\r\nimport { FaCog } from 'react-icons/fa'; // ต้องติดตั้ง react-icons: npm install react-icons\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\r\n\r\nconst Navbar = ({\r\n    isSidebarOpen, toggleSidebar, user, handleSignOut, onClassActionClick, classrooms,\r\n    isClassroomPage, onShareClick, classroomMembers, isAccountSettingPage,\r\n    onPromoteMember,\r\n    onKickMember,\r\n    onDemoteMember,\r\n    classroom,\r\n    isCreator,\r\n    isEditing, onToggleEditMode, onSavePositions, onCancelEdit, userSeatId, onLeaveSeat, // ✨ เพิ่ม props ใหม่\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n    const handleImageError = (e) => {\r\n        e.target.onerror = null;\r\n        e.target.src = userPlaceholderImage;\r\n        console.warn(\"Navbar profile image failed to load, falling back to placeholder:\", e.target.src);\r\n    };\r\n\r\n    const handleSignInClick = () => {\r\n        navigate('/login');\r\n    };\r\n\r\n    const toggleDropdown = () => {\r\n        setIsDropdownOpen(!isDropdownOpen);\r\n    };\r\n\r\n    const handleAccountSettingClick = () => {\r\n        navigate('/account-setting');\r\n        setIsDropdownOpen(false);\r\n    };\r\n\r\n    const handleSignOutClick = async () => {\r\n        await handleSignOut();\r\n        setIsDropdownOpen(false);\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleClassroomClick = (classId) => {\r\n        navigate(`/classroom/${classId}`);\r\n        toggleSidebar();\r\n    };\r\n\r\n    const handleBackClick = () => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const listItemStyle = {\r\n        whiteSpace: 'nowrap',\r\n        overflow: 'hidden',\r\n        textOverflow: 'ellipsis',\r\n        maxWidth: '100%',\r\n        display: 'block'\r\n    };\r\n\r\n    const handleMemberMenu = (member) => {\r\n        const isTargetCreator = classroomMembers.creator.some(c => c._id === member._id);\r\n\r\n        if (isTargetCreator) {\r\n            // Menu for Co-Creators\r\n            Swal.fire({\r\n                title: member.displayName,\r\n                showDenyButton: true,\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Demote to Participant',\r\n                denyButtonText: 'Kick',\r\n                cancelButtonText: 'Cancel',\r\n                icon: 'info',\r\n                confirmButtonColor: '#e74c3c',\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                    await onDemoteMember(member._id, member.displayName);\r\n                } else if (result.isDenied) {\r\n                    await onKickMember(member._id, member.displayName);\r\n                }\r\n            });\r\n        } else {\r\n            // Menu for Participants\r\n            Swal.fire({\r\n                title: member.displayName,\r\n                showDenyButton: true,\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Promote to Creator',\r\n                denyButtonText: 'Kick',\r\n                cancelButtonText: 'Cancel',\r\n                icon: 'info'\r\n            }).then(async (result) => {\r\n                if (result.isConfirmed) {\r\n                    await onPromoteMember(member._id, member.displayName);\r\n                } else if (result.isDenied) {\r\n                    await onKickMember(member._id, member.displayName);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"navbar__logo\">\r\n                    <button className=\"navbar__burger\" onClick={toggleSidebar}>\r\n                        &#9776;\r\n                    </button>\r\n                    <img src={icon} alt=\"Logo\" className=\"navbar__logo-image\" />\r\n                    <h1 style={{ color: \"#414141ff\" ,fontSize: \"24px\" }}>Chair</h1>\r\n                </div>\r\n\r\n                {/* ✨ ย้ายปุ่มมาไว้ตรงกลาง Navbar เพื่อให้แสดงผลถูกต้อง */}\r\n                <div className=\"navbar-center\">\r\n                    {isClassroomPage && isCreator && (\r\n                        isEditing ? (\r\n                            <>\r\n                                <button className=\"navbar-action-button save\" onClick={onSavePositions} title=\"Save Seating\">\r\n                                    <FiSave size={20} />\r\n                                    <span>Save</span>\r\n                                </button>\r\n                                <button className=\"navbar-action-button cancel\" onClick={onCancelEdit} title=\"Cancel\">\r\n                                    <FiX size={20} />\r\n                                    <span>Cancel</span>\r\n                                </button>\r\n                            </>\r\n                        ) : (\r\n                            <button className=\"navbar-action-button\" onClick={onToggleEditMode} title=\"Edit Seating\">\r\n                                <FiEdit2 size={20} />\r\n                                <span>Edit</span>\r\n                            </button>\r\n                        )\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"navbar__profile\" onClick={toggleDropdown}>\r\n                    {user ? (\r\n                        <img\r\n                            src={user.photoURL ? `${API_BASE_URL}${user.photoURL}` : userPlaceholderImage}\r\n                            alt=\"User Profile\"\r\n                            className=\"navbar-profile-image\"\r\n                            onError={handleImageError}\r\n                        />\r\n                    ) : (\r\n                        <button onClick={handleSignInClick} className=\"navbar__signin-button\">\r\n                            Sign In\r\n                        </button>\r\n                    )}\r\n                    {isDropdownOpen && user && (\r\n                        <div className=\"dropdown-menu\">\r\n                            <div className=\"dropdown-user-info\">\r\n                                <img\r\n                                    src={user.photoURL ? `${API_BASE_URL}${user.photoURL}` : userPlaceholderImage}\r\n                                    alt=\"User Profile\"\r\n                                    className=\"dropdown-profile-image\"\r\n                                    onError={handleImageError}\r\n                                />\r\n                                <div className=\"user-details\">\r\n                                    <span className=\"user-name\">{user.displayName}</span>\r\n                                    <br />\r\n                                    <span className=\"user-email\">{user.email}</span>\r\n                                </div>\r\n                            </div>\r\n                            <hr style={{ border: \"none\", height: \"1px\", backgroundColor: \"#dadce0\", margin: \"8px 0\" }} />\r\n                            <div className=\"dropdown-list\">\r\n                                <span className=\"dropdown-item\" onClick={handleAccountSettingClick}>\r\n                                    Account Setting\r\n                                </span>\r\n                                <span className=\"dropdown-item\" onClick={handleSignOutClick}>\r\n                                    <FiLogOut />\r\n                                    Sign Out\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n            <aside className={`sidebar ${isSidebarOpen ? \"open\" : \"\"}`}>\r\n                <ul className=\"sidebar-list\">\r\n                    {/* ✨ เพิ่มโค้ดนี้: เพิ่มเงื่อนไขสำหรับหน้า Account Setting */}\r\n                    {isAccountSettingPage ? (\r\n                        <li className=\"sidebar-list-item sidebar-back-button\" onClick={handleBackClick}>\r\n                            <FiArrowLeft size={18} />\r\n                            <span>Back</span>\r\n                        </li>\r\n                    ) : isClassroomPage ? (\r\n                        <>\r\n                            <li className=\"sidebar-list-item sidebar-back-button\" onClick={handleBackClick}>\r\n                                <FiArrowLeft size={18} />\r\n                                <span>Back</span>\r\n                            </li>\r\n                            {/* ✨ การแก้ไข: เพิ่มการตรวจสอบ user ก่อนแสดงส่วนนี้เพื่อป้องกัน error */}\r\n                            {user && (\r\n                                <li className=\"sidebar-list-item sidebar-share-class\" onClick={onShareClick}>\r\n                                    <FiShare2 size={18} />\r\n                                    <span>Share Class</span>\r\n                                </li>\r\n                            )}\r\n                            \r\n                            {/* ส่วนแสดงสมาชิก */}\r\n                            {classroomMembers?.creator && classroomMembers.creator.length > 0 && (\r\n                                <>\r\n                                    <hr className=\"divider\" style={{ margin: \"8px 0\" }} />\r\n                                    <h3 className=\"sidebar-section-title\">\r\n                                        Creator ({classroomMembers.creator.length})\r\n                                    </h3>\r\n                                    {/* รองรับ creator หลายคน */}\r\n                                    {classroomMembers.creator.map(c => (\r\n                                        <li key={c._id} className=\"sidebar-list-item sidebar-member-item\">\r\n                                            <img\r\n                                                src={c.photoURL ? `${API_BASE_URL}${c.photoURL}` : userPlaceholderImage}\r\n                                                alt={c.displayName}\r\n                                                onError={handleImageError}\r\n                                                className=\"sidebar-profile-image\"\r\n                                            />\r\n                                            <span style={listItemStyle}>{c.displayName}</span>\r\n                                            {/* Show menu for co-creators, but not for the user themselves */}\r\n                                            {isCreator && user.id !== c._id && (\r\n                                                <button\r\n                                                    className=\"menu-btn\"\r\n                                                    onClick={() => handleMemberMenu(c)}\r\n                                                    title=\"Member options\"\r\n                                                >\r\n                                                    <FaCog />\r\n                                                </button>\r\n                                            )}\r\n                                        </li>\r\n                                    ))}\r\n                                </>\r\n                            )}\r\n                            \r\n                            {classroomMembers?.participants?.length > 0 && (\r\n                                <>\r\n                                    <hr className=\"divider\" style={{ margin: \"8px 0\" }} />                                    \r\n                                    <h3 className=\"sidebar-section-title\">\r\n                                        Participants ({classroomMembers.participants.filter(p => !classroomMembers.creator.some(c => c._id === p._id)).length})\r\n                                    </h3>\r\n                                    {classroomMembers.participants // กรองเอา creator ออกจาก participants\r\n                                        .filter(p => !classroomMembers.creator.some(c => c._id === p._id))\r\n                                        .map(participant => (\r\n                                        <li key={participant._id} className=\"sidebar-list-item sidebar-member-item\">\r\n                                            <img\r\n                                                src={participant.photoURL ? `${API_BASE_URL}${participant.photoURL}` : userPlaceholderImage}\r\n                                                alt={participant.displayName}\r\n                                                onError={handleImageError}\r\n                                                className=\"sidebar-profile-image\"\r\n                                            />\r\n                                            <span style={listItemStyle}>{participant.displayName}</span>\r\n                                            {isCreator && user.id !== participant._id && (\r\n                                                <button\r\n                                                    className=\"menu-btn\"\r\n                                                    onClick={() => handleMemberMenu(participant)}\r\n                                                    title=\"Member options\"\r\n                                                >\r\n                                                    <FaCog />\r\n                                                </button>\r\n                                            )}\r\n                                        </li>\r\n                                    ))}\r\n                                </>\r\n                            )}\r\n                            {isClassroomPage && userSeatId && (\r\n                                <button\r\n                                    className=\"leave-seat-btn\"\r\n                                    style={{\r\n                                        width: '90%',\r\n                                        margin: '20px auto 10px auto',\r\n                                        display: 'block',\r\n                                        background: '#f44336',\r\n                                        color: '#fff',\r\n                                        border: 'none',\r\n                                        borderRadius: '6px',\r\n                                        padding: '10px 0',\r\n                                        fontWeight: 'bold',\r\n                                        cursor: 'pointer'\r\n                                    }}\r\n                                    onClick={onLeaveSeat}\r\n                                >\r\n                                    Leave Seat\r\n                                </button>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            {/* ✨ การแก้ไข: เพิ่มการตรวจสอบ user ก่อนแสดงส่วนนี้เพื่อป้องกัน error */}\r\n                            {user && (\r\n                                <li className=\"sidebar-list-item sidebar-create-class\" onClick={onClassActionClick}>\r\n                                    <FiPlus size={18} />\r\n                                    <span>Class</span>\r\n                                </li>\r\n                            )}\r\n                            <hr style={{ border: \"none\", height: \"1px\", backgroundColor: \"#dadce0\", margin: \"8px 0\" }} />\r\n                            {classrooms.length > 0 ? (\r\n                                classrooms.map((room) => (\r\n                                    <li\r\n                                        key={room._id}\r\n                                        className=\"sidebar-list-item sidebar-classroom-item\"\r\n                                        onClick={() => handleClassroomClick(room._id)}\r\n                                    >\r\n                                        <img\r\n                                            src={room.creator?.photoURL ? `${API_BASE_URL}${room.creator.photoURL}` : userPlaceholderImage}\r\n                                            alt=\"Creator Profile\"\r\n                                            className=\"sidebar-profile-image\"\r\n                                        />\r\n                                        <span className=\"sidebar-classroom-name\">{room.name}</span>\r\n                                    </li>\r\n                                ))\r\n                            ) : (\r\n                                <li className=\"sidebar-no-class-text\">\r\n                                    No classes joined.\r\n                                </li>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                </ul>\r\n            </aside>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","// src/utils/cropImage.js\r\n\r\nconst createImage = (url) =>\r\n    new Promise((resolve, reject) => {\r\n        const image = new Image();\r\n        image.addEventListener('load', () => resolve(image));\r\n        image.addEventListener('error', (error) => reject(error));\r\n        image.setAttribute('crossOrigin', 'anonymous');\r\n        image.src = url;\r\n    });\r\n\r\n/**\r\n * This function returns a Promise that resolves with a Blob object representing the cropped image.\r\n * @param {string} imageSrc - The base64 or URL of the image to crop.\r\n * @param {Object} pixelCrop - The pixel dimensions and position of the crop.\r\n */\r\nasync function getCroppedImg(imageSrc, pixelCrop) {\r\n    const image = await createImage(imageSrc);\r\n    const canvas = document.createElement('canvas');\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // set canvas size to match the crop box\r\n    canvas.width = pixelCrop.width;\r\n    canvas.height = pixelCrop.height;\r\n\r\n    // draw the cropped image onto the canvas\r\n    ctx.drawImage(\r\n        image,\r\n        pixelCrop.x,\r\n        pixelCrop.y,\r\n        pixelCrop.width,\r\n        pixelCrop.height,\r\n        0,\r\n        0,\r\n        pixelCrop.width,\r\n        pixelCrop.height\r\n    );\r\n\r\n    return new Promise((resolve) => {\r\n        canvas.toBlob((file) => {\r\n            resolve(file);\r\n        }, 'image/jpeg'); // Change to 'image/png' if needed\r\n    });\r\n}\r\n\r\nexport default getCroppedImg;","// src/component/AccountSetting.jsx\r\n\r\nimport React, { useState, useCallback } from 'react';\r\nimport Cropper from 'react-easy-crop';\r\nimport getCroppedImg from '../utils/cropImage';\r\nimport '../CSS/AccountSetting.css';\r\nimport nullUserPhoto from '../image/nulluser.png';\r\nimport Navbar from '../component/Navbar';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000';\r\n\r\nconst AccountSetting = ({ user, updateUserProfile, onSignOut, isSidebarOpen, toggleSidebar }) => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [previewUrl, setPreviewUrl] = useState(user.photoURL);\r\n    const [loading, setLoading] = useState(false);\r\n    const [message, setMessage] = useState('');\r\n    const [showCropper, setShowCropper] = useState(false);\r\n\r\n    // Cropper states\r\n    const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n    const [zoom, setZoom] = useState(1);\r\n    const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n    const [imageSrcToCrop, setImageSrcToCrop] = useState(null);\r\n\r\n    const onCropComplete = useCallback((croppedArea, croppedAreaPixels) => {\r\n        setCroppedAreaPixels(croppedAreaPixels);\r\n    }, []);\r\n\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file) {\r\n            setSelectedFile(file);\r\n            const fileReader = new FileReader();\r\n            fileReader.onload = () => {\r\n                setImageSrcToCrop(fileReader.result);\r\n                setShowCropper(true);\r\n            };\r\n            fileReader.readAsDataURL(file);\r\n        } else {\r\n            setSelectedFile(null);\r\n            setPreviewUrl(user.photoURL);\r\n        }\r\n    };\r\n\r\n    const handleCropAndUpload = async () => {\r\n        setLoading(true);\r\n        setMessage('');\r\n        setShowCropper(false);\r\n\r\n        try {\r\n            const croppedImageBlob = await getCroppedImg(imageSrcToCrop, croppedAreaPixels);\r\n            const formData = new FormData();\r\n            formData.append('profileImage', croppedImageBlob, selectedFile.name);\r\n\r\n            const response = await fetch(`${API_BASE_URL}/api/auth/profile/update-photo`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'x-auth-token': user.token,\r\n                },\r\n                body: formData,\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                updateUserProfile(data.user);\r\n                setPreviewUrl(data.user.photoURL);\r\n                setMessage('Profile picture updated successfully!');\r\n            } else {\r\n                const errorMessage = typeof data.msg === 'string' ? data.msg : 'Failed to update profile picture.';\r\n                setMessage(errorMessage);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error cropping or uploading photo:\", error);\r\n            const errorMessage = typeof error === 'object' && error.message ? error.message : 'Server error. Please try again later.';\r\n            setMessage(errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n            setSelectedFile(null);\r\n            setImageSrcToCrop(null);\r\n        }\r\n    };\r\n\r\n    const handleDeletePhoto = async () => {\r\n        setLoading(true);\r\n        setMessage('');\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/auth/profile/delete-photo`, {\r\n                method: 'DELETE',\r\n                headers: {\r\n                    'x-auth-token': user.token,\r\n                },\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                updateUserProfile(data.user);\r\n                setPreviewUrl(null);\r\n                setMessage('Profile picture removed successfully!');\r\n            } else {\r\n                const errorMessage = typeof data.msg === 'string' ? data.msg : 'Failed to remove profile picture.';\r\n                setMessage(errorMessage);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error deleting profile photo:\", error);\r\n            const errorMessage = typeof error === 'object' && error.message ? error.message : 'Server error. Please try again later.';\r\n            setMessage(errorMessage);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const photoSrc = previewUrl\r\n        ? (previewUrl.startsWith('blob:') ? previewUrl : `${API_BASE_URL}${previewUrl}`)\r\n        : nullUserPhoto;\r\n\r\n    return (\r\n        <>\r\n            <Navbar\r\n                isSidebarOpen={isSidebarOpen}\r\n                toggleSidebar={toggleSidebar}\r\n                user={user}\r\n                handleSignOut={onSignOut}\r\n                isAccountSettingPage={true}\r\n            />\r\n            <main className={`main__content ${isSidebarOpen ? 'shift' : ''}`}>\r\n                <div className=\"account-setting-container\">\r\n                    <div className=\"setting-card\">\r\n                        <h2>Account Settings</h2>\r\n\r\n                        <div className=\"profile-photo-section\">\r\n                            <img\r\n                                src={photoSrc}\r\n                                alt=\"Profile\"\r\n                                className=\"profile-photo\"\r\n                            />\r\n                            <div className=\"photo-actions\">\r\n                                <label className=\"file-upload-label\">\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\"image/*\"\r\n                                        onChange={handleFileChange}\r\n                                        className=\"file-upload-input\"\r\n                                        disabled={loading}\r\n                                    />\r\n                                    <span className=\"file-upload-button\">\r\n                                        {loading ? 'Processing...' : 'Change Photo'}\r\n                                    </span>\r\n                                </label>\r\n                                {user.photoURL && (\r\n                                    <button\r\n                                        onClick={handleDeletePhoto}\r\n                                        className=\"remove-photo-button\"\r\n                                        disabled={loading}\r\n                                    >\r\n                                        Remove Photo\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        {message && <p className=\"message\">{message}</p>}\r\n\r\n                        <div className=\"user-info-section\">\r\n                            <h3>User Information</h3>\r\n                            <p><strong>Name:</strong> {user.displayName}</p>\r\n                            <p><strong>Email:</strong> {user.email}</p>\r\n                        </div>\r\n\r\n                        <div className=\"action-buttons\">\r\n                            <button onClick={onSignOut} className=\"sign-out-button\">Sign Out</button>\r\n                        </div>\r\n\r\n                        {showCropper && (\r\n                            <div className=\"cropper-modal\">\r\n                                <div className=\"cropper-container\">\r\n                                    <Cropper\r\n                                        image={imageSrcToCrop}\r\n                                        crop={crop}\r\n                                        zoom={zoom}\r\n                                        aspect={1}\r\n                                        onCropChange={setCrop}\r\n                                        onZoomChange={setZoom}\r\n                                        onCropComplete={onCropComplete}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"cropper-controls\">\r\n                                    <input\r\n                                        type=\"range\"\r\n                                        value={zoom}\r\n                                        min={1}\r\n                                        max={3}\r\n                                        step={0.1}\r\n                                        aria-labelledby=\"Zoom\"\r\n                                        onChange={(e) => setZoom(e.target.value)}\r\n                                        className=\"zoom-slider\"\r\n                                    />\r\n                                    <button onClick={() => setShowCropper(false)} className=\"cancel-crop-button\">\r\n                                        Cancel\r\n                                    </button>\r\n                                    <button onClick={handleCropAndUpload} className=\"crop-upload-button\">\r\n                                        Crop & Upload\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AccountSetting;"],"names":["API_BASE_URL","process","REACT_APP_API_BASE_URL","_ref","_classroomMembers$par","isSidebarOpen","toggleSidebar","user","handleSignOut","onClassActionClick","classrooms","isClassroomPage","onShareClick","classroomMembers","isAccountSettingPage","onPromoteMember","onKickMember","onDemoteMember","classroom","isCreator","isEditing","onToggleEditMode","onSavePositions","onCancelEdit","userSeatId","onLeaveSeat","navigate","useNavigate","isDropdownOpen","setIsDropdownOpen","useState","handleImageError","e","target","onerror","src","userPlaceholderImage","console","warn","handleBackClick","listItemStyle","whiteSpace","overflow","textOverflow","maxWidth","display","handleMemberMenu","member","creator","some","c","_id","Swal","title","displayName","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","cancelButtonText","icon","confirmButtonColor","then","async","result","isConfirmed","isDenied","_jsxs","_Fragment","children","className","_jsx","onClick","alt","style","color","fontSize","FiSave","size","FiX","FiEdit2","toggleDropdown","photoURL","concat","onError","handleSignInClick","email","border","height","backgroundColor","margin","handleAccountSettingClick","window","location","reload","FiLogOut","FiArrowLeft","FiShare2","length","map","id","FaCog","participants","filter","p","participant","width","background","borderRadius","padding","fontWeight","cursor","FiPlus","room","_room$creator","handleClassroomClick","classId","name","imageSrc","pixelCrop","image","url","Promise","resolve","reject","Image","addEventListener","error","setAttribute","canvas","document","createElement","ctx","getContext","drawImage","x","y","toBlob","file","updateUserProfile","onSignOut","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","loading","setLoading","message","setMessage","showCropper","setShowCropper","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","imageSrcToCrop","setImageSrcToCrop","onCropComplete","useCallback","croppedArea","photoSrc","startsWith","nullUserPhoto","Navbar","type","accept","onChange","event","files","fileReader","FileReader","onload","readAsDataURL","disabled","response","fetch","method","headers","token","data","json","ok","errorMessage","msg","Cropper","aspect","onCropChange","onZoomChange","value","min","max","step","croppedImageBlob","getCroppedImg","formData","FormData","append","body"],"sourceRoot":""}