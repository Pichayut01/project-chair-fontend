{"version":3,"file":"static/js/362.9a979f7b.chunk.js","mappings":"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","sources":["pages/LoginPage.jsx","../node_modules/sweetalert2-react-content/src/mounts.js","../node_modules/sweetalert2-react-content/src/index.js"],"sourcesContent":["// src/pages/LoginPage.jsx\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"../CSS/Login.css\";\r\nimport { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\nimport { auth } from \"../firebaseConfig\";\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport { useNavigate } from \"react-router-dom\"; \r\n\r\nconst backendUrl = \"http://localhost:5000/api/auth\";\r\nconst MySwal = withReactContent(Swal);\r\n\r\n// เพิ่ม onLoginSuccess เป็น prop ที่รับจาก App.jsx\r\nconst LoginPage = ({ onLoginSuccess }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [isRegisterMode, setIsRegisterMode] = useState(false);\r\n  const navigate = useNavigate(); \r\n\r\n  const handleGoogleSignIn = async () => {\r\n    const provider = new GoogleAuthProvider();\r\n    try {\r\n      const result = await signInWithPopup(auth, provider);\r\n      const firebaseUser = result.user;\r\n      const idToken = await firebaseUser.getIdToken();\r\n\r\n      const response = await axios.post(`${backendUrl}/google-login-verify`, {\r\n        idToken,\r\n      });\r\n      const { token, user } = response.data;\r\n\r\n      localStorage.setItem(\"authToken\", token);\r\n      localStorage.setItem(\"userProfile\", JSON.stringify(user));\r\n      \r\n      MySwal.fire({\r\n        title: \"Success!\",\r\n        text: \"Login with Google successful.\",\r\n        icon: \"success\",\r\n        timer: 1500,\r\n        showConfirmButton: false,\r\n      }).then(() => {\r\n        onLoginSuccess({ ...user, token }); // เรียกใช้ฟังก์ชัน onLoginSuccess เพื่ออัปเดต user ใน App.jsx\r\n        // navigate('/'); // ย้ายการนำทางไปที่ App.jsx เพื่อให้ทำงานได้ถูกต้อง\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(\"Login with Google error:\", error);\r\n      MySwal.fire({\r\n        title: \"Error!\",\r\n        text: \"Failed to login with Google.\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleManualLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${backendUrl}/login`, {\r\n        email,\r\n        password,\r\n      });\r\n      const { token, user } = response.data;\r\n\r\n      localStorage.setItem(\"authToken\", token);\r\n      localStorage.setItem(\"userProfile\", JSON.stringify(user));\r\n\r\n      MySwal.fire({\r\n        title: \"Success!\",\r\n        text: \"Login successful.\",\r\n        icon: \"success\",\r\n        timer: 1500,\r\n        showConfirmButton: false,\r\n      }).then(() => {\r\n        onLoginSuccess({ ...user, token }); // เรียกใช้ฟังก์ชัน onLoginSuccess เพื่ออัปเดต user ใน App.jsx\r\n        // navigate('/'); // ย้ายการนำทางไปที่ App.jsx เพื่อให้ทำงานได้ถูกต้อง\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Manual login error:\", error);\r\n      MySwal.fire({\r\n        title: \"Error!\",\r\n        text: error.response.data.msg || \"Invalid email or password.\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleManualRegister = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post(`${backendUrl}/register`, {\r\n        email,\r\n        password,\r\n        displayName,\r\n      });\r\n      const { token, user } = response.data;\r\n      \r\n      localStorage.setItem(\"authToken\", token);\r\n      localStorage.setItem(\"userProfile\", JSON.stringify(user));\r\n\r\n      MySwal.fire({\r\n        title: \"Success!\",\r\n        text: \"Registration successful. You are now logged in.\",\r\n        icon: \"success\",\r\n        timer: 1500,\r\n        showConfirmButton: false,\r\n      }).then(() => {\r\n        onLoginSuccess({ ...user, token }); // เรียกใช้ฟังก์ชัน onLoginSuccess เพื่ออัปเดต user ใน App.jsx\r\n        // navigate('/'); // ย้ายการนำทางไปที่ App.jsx เพื่อให้ทำงานได้ถูกต้อง\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Manual registration error:\", error);\r\n      MySwal.fire({\r\n        title: \"Error!\",\r\n        text: error.response.data.msg || \"Registration failed.\",\r\n        icon: \"error\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"login-main\">\r\n      <div className=\"login-container\">\r\n        <div className=\"form-wrapper\">\r\n          <div className=\"form-header\">\r\n            <button\r\n              onClick={() => setIsRegisterMode(false)}\r\n              className={!isRegisterMode ? \"active\" : \"\"}\r\n            >\r\n              Login\r\n            </button>\r\n            <button\r\n              onClick={() => setIsRegisterMode(true)}\r\n              className={isRegisterMode ? \"active\" : \"\"}\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n\r\n          {isRegisterMode ? (\r\n            <form onSubmit={handleManualRegister} className=\"login-form\">\r\n              <h2>Register</h2>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"registerDisplayName\">Display Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"registerDisplayName\"\r\n                  value={displayName}\r\n                  onChange={(e) => setDisplayName(e.target.value)}\r\n                  required\r\n                  placeholder=\"Your Name\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"registerEmail\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"registerEmail\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                  placeholder=\"your@email.com\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"registerPassword\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"registerPassword\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                  placeholder=\"********\"\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"submit-button\">\r\n                Register\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <form onSubmit={handleManualLogin} className=\"login-form\">\r\n              <h2>Login</h2>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"loginEmail\">Email</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"loginEmail\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                  placeholder=\"your@email.com\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"loginPassword\">Password</label>\r\n                <input\r\n                  type=\"password\"\r\n                  id=\"loginPassword\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                  placeholder=\"********\"\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"submit-button\">\r\n                Login\r\n              </button>\r\n            </form>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"divider\">\r\n          <span>OR</span>\r\n        </div>\r\n\r\n        <div className=\"google-login\">\r\n          <button onClick={handleGoogleSignIn} className=\"google-login-button\">\r\n            <img\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/c/c1/Google_%22G%22_logo.svg\"\r\n              alt=\"Google logo\"\r\n            />\r\n            Login with Google\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","export const mounts = [\n  {\n    key: 'title',\n    getter: (swal) => swal.getTitle(),\n  },\n  {\n    key: 'html',\n    getter: (swal) => swal.getHtmlContainer(),\n  },\n  {\n    key: 'confirmButtonText',\n    getter: (swal) => swal.getConfirmButton(),\n  },\n  {\n    key: 'denyButtonText',\n    getter: (swal) => swal.getDenyButton(),\n  },\n  {\n    key: 'cancelButtonText',\n    getter: (swal) => swal.getCancelButton(),\n  },\n  {\n    key: 'footer',\n    getter: (swal) => swal.getFooter(),\n  },\n  {\n    key: 'closeButtonHtml',\n    getter: (swal) => swal.getCloseButton(),\n  },\n  {\n    key: 'iconHtml',\n    getter: (swal) => swal.getIconContent(),\n  },\n  {\n    key: 'loaderHtml',\n    getter: (swal) => swal.getLoader(),\n  },\n]\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { mounts } from './mounts'\n\nconst noop = () => {}\n\nexport default function withReactContent(ParentSwal) {\n  /* Returns `params` separated into a tuple of `reactParams` (the React params that need to be rendered)\n  and`otherParams` (all the other parameters, with any React params replaced with a space ' ') */\n  function extractReactParams(params) {\n    const reactParams = {}\n    const otherParams = {}\n    const mountKeys = mounts.map((mount) => mount.key)\n    Object.entries(params).forEach(([key, value]) => {\n      if (mountKeys.includes(key) && React.isValidElement(value)) {\n        reactParams[key] = value\n        otherParams[key] = ' '\n      } else {\n        otherParams[key] = value\n      }\n    })\n    return [reactParams, otherParams]\n  }\n\n  function render(swal, reactParams) {\n    Object.entries(reactParams).forEach(([key, value]) => {\n      const mount = mounts.find((mount) => mount.key === key)\n      const domElement = mount.getter(ParentSwal)\n      const root = createRoot(domElement)\n      root.render(value)\n      swal.__roots.push(root)\n    })\n  }\n\n  function unrender(swal) {\n    swal.__roots.forEach((root) => {\n      root.unmount()\n    })\n    swal.__roots = []\n  }\n\n  return class extends ParentSwal {\n    static argsToParams(args) {\n      if (React.isValidElement(args[0]) || React.isValidElement(args[1])) {\n        const params = {}\n        ;['title', 'html', 'icon'].forEach((name, index) => {\n          if (args[index] !== undefined) {\n            params[name] = args[index]\n          }\n        })\n        return params\n      } else {\n        return ParentSwal.argsToParams(args)\n      }\n    }\n\n    _main(params, mixinParams) {\n      this.__roots = []\n      this.__params = Object.assign({}, mixinParams, params)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      const superWillOpen = otherParams.willOpen || noop\n      const superDidOpen = otherParams.didOpen || noop\n      const superDidDestroy = otherParams.didDestroy || noop\n      return super._main(\n        Object.assign({}, otherParams, {\n          willOpen: (popup) => {\n            render(this, reactParams)\n            superWillOpen(popup)\n          },\n          didOpen: (popup) => {\n            // read more about why this setTimeout is needed here:\n            // https://github.com/reactwg/react-18/discussions/5 (What about the render callback?)\n            setTimeout(() => {\n              superDidOpen(popup)\n            })\n          },\n          didDestroy: (popup) => {\n            superDidDestroy(popup)\n            unrender(this)\n          },\n        })\n      )\n    }\n\n    update(params) {\n      Object.assign(this.__params, params)\n      unrender(this)\n      const [reactParams, otherParams] = extractReactParams(this.__params)\n      super.update(otherParams)\n      render(this, reactParams)\n    }\n  }\n}\n"],"names":["backendUrl","MySwal","withReactContent","Swal","_ref","onLoginSuccess","email","setEmail","useState","password","setPassword","displayName","setDisplayName","isRegisterMode","setIsRegisterMode","useNavigate","_jsx","className","children","_jsxs","onClick","onSubmit","async","e","preventDefault","response","axios","post","concat","token","user","data","localStorage","setItem","JSON","stringify","fire","title","text","icon","timer","showConfirmButton","then","_objectSpread","error","console","msg","htmlFor","type","id","value","onChange","target","required","placeholder","provider","GoogleAuthProvider","firebaseUser","signInWithPopup","auth","idToken","getIdToken","src","alt","mounts","key","getter","swal","getTitle","getHtmlContainer","getConfirmButton","getDenyButton","getCancelButton","getFooter","getCloseButton","getIconContent","getLoader","noop","ParentSwal","extractReactParams","params","reactParams","otherParams","mountKeys","map","mount","Object","entries","forEach","includes","React","isValidElement","render","_ref2","domElement","find","root","client","createRoot","__roots","push","unrender","unmount","argsToParams","args","name","index","undefined","_main","mixinParams","this","__params","assign","superWillOpen","willOpen","superDidOpen","didOpen","superDidDestroy","didDestroy","super","popup","setTimeout","update"],"sourceRoot":""}